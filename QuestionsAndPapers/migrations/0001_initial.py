# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2019-02-03 13:06
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('basicinformation', '0001_initial'),
        ('Recommendations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnsweredQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ChapterRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=100, null=True)),
                ('chapterCode', models.FloatField(blank=True, null=True)),
                ('chapterName', models.CharField(blank=True, max_length=200, null=True)),
                ('sortedAccuracies', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=None)),
                ('students', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None)),
                ('minimumTests', models.IntegerField(blank=True, null=True)),
                ('maximumTests', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Choices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicament', models.CharField(choices=[('Correct', 'Correct'), ('Wrong', 'Wrong'), ('Not decided', 'Not decided')], max_length=30)),
                ('text', models.TextField(blank=True, null=True)),
                ('picture', models.URLField(blank=True, null=True)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('explanationPicture', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Comprehension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('picture', models.URLField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralDifficulty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_difficulty', models.FloatField()),
                ('skipped_ratio', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='InstituteQuestionDifficulty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_difficulty', models.FloatField()),
                ('skipped_ratio', models.FloatField()),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.School')),
            ],
        ),
        migrations.CreateModel(
            name='JobList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('body', models.TextField()),
                ('date', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='KlassTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('max_marks', models.PositiveIntegerField()),
                ('published', models.DateField(auto_now_add=True)),
                ('sub', models.CharField(choices=[('Maths', 'Maths'), ('Science', 'Science'), ('English', 'English')], max_length=70)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('mode', models.CharField(choices=[('BodhiOnline', 'BodhiOnline'), ('BodhiSchool', 'BodhiSchool')], max_length=20)),
                ('totalTime', models.IntegerField(blank=True, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('klas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.klass')),
                ('testTakers', models.ManyToManyField(to='basicinformation.Student')),
            ],
        ),
        migrations.CreateModel(
            name='OnlineMarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rightAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('wrongAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('allAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('skippedAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('marks', models.IntegerField()),
                ('testTaken', models.DateField()),
                ('timeTaken', models.IntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.KlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='PatternTestPattern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(blank=True, max_length=100, null=True)),
                ('subjects', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('numberQuestions', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('level', models.CharField(choices=[('9', 'Ninth'), ('10', 'Tenth'), ('11', 'Eleventh'), ('12', 'Twelveth')], max_length=20)),
                ('max_marks', models.IntegerField()),
                ('sub', models.CharField(choices=[('Maths', 'Maths'), ('Science', 'Science'), ('English', 'English')], max_length=70)),
                ('chapCategory', models.CharField(choices=[('1', 'Chapter 1'), ('2', 'Chapter 2'), ('3', 'Chapter 3')], max_length=30)),
                ('topic_category', models.CharField(choices=[('1.1', '1.1'), ('1.2', '1.2'), ('1.3', '1.3'), ('1.4', '1.4'), ('1.5', '1.5'), ('1.6', '1.6'), ('1.7', '1.7'), ('1.8', '1.8'), ('1.9', '1.9'), ('1.10', '1.10'), ('1.11', '1.11'), ('1.12', '1.12'), ('1.13', '1.13'), ('1.14', '1.14'), ('1.15', '1.15'), ('1.16', '1.16'), ('1.17', '1.17'), ('1.18', '1.18'), ('1.19', '1.19'), ('2.1', '2.1'), ('2.2', '2.2'), ('2.3', '2.3'), ('2.4', '2.4'), ('2.5', '2.5'), ('2.6', '2.6'), ('2.7', '2.7'), ('2.8', '2.8'), ('2.9', '2.9'), ('2.10', '2.10'), ('2.11', '2.11'), ('2.12', '2.12'), ('2.13', '2.13'), ('2.14', '2.14'), ('2.15', '2.15'), ('2.16', '2.16'), ('2.17', '2.17'), ('2.18', '2.18'), ('2.19', '2.19'), ('3.1', '3.1'), ('3.2', '3.2'), ('3.3', '3.3'), ('3.4', '3.4'), ('3.5', '3.5'), ('3.6', '3.6'), ('3.7', '3.7'), ('3.8', '3.8'), ('3.9', '3.9'), ('3.10', '3.10'), ('3.11', '3.11'), ('3.12', '3.12'), ('3.13', '3.13'), ('3.14', '3.14'), ('3.15', '3.15'), ('3.16', '3.16'), ('3.17', '3.17'), ('3.18', '3.18'), ('3.19', '3.19'), ('4.1', '4.1'), ('4.2', '4.2'), ('4.3', '4.3'), ('4.4', '4.4'), ('4.5', '4.5'), ('4.6', '4.6'), ('4.7', '4.7'), ('4.8', '4.8'), ('4.9', '4.9'), ('4.10', '4.10'), ('4.11', '4.11'), ('4.12', '4.12'), ('4.13', '4.13'), ('4.14', '4.14'), ('4.15', '4.15'), ('4.16', '4.16'), ('4.17', '4.17'), ('4.18', '4.18'), ('4.19', '4.19'), ('5.1', '5.1'), ('5.2', '5.2'), ('5.3', '5.3'), ('5.4', '5.4'), ('5.5', '5.5'), ('5.6', '5.6'), ('5.7', '5.7'), ('5.8', '5.8'), ('5.9', '5.9'), ('5.10', '5.10'), ('5.11', '5.11'), ('5.12', '5.12'), ('5.13', '5.13'), ('5.14', '5.14'), ('5.15', '5.15'), ('5.16', '5.16'), ('5.17', '5.17'), ('5.18', '5.18'), ('5.19', '5.19'), ('6.1', '6.1'), ('6.2', '6.2'), ('6.3', '6.3'), ('6.4', '6.4'), ('6.5', '6.5'), ('6.6', '6.6'), ('6.7', '6.7'), ('6.8', '6.8'), ('6.9', '6.9'), ('6.10', '6.10'), ('6.11', '6.11'), ('6.12', '6.12'), ('6.13', '6.13'), ('6.14', '6.14'), ('6.15', '6.15'), ('6.16', '6.16'), ('6.17', '6.17'), ('6.18', '6.18'), ('6.19', '6.19'), ('7.1', '7.1'), ('7.2', '7.2'), ('7.3', '7.3'), ('7.4', '7.4'), ('7.5', '7.5'), ('7.6', '7.6'), ('7.7', '7.7'), ('7.8', '7.8'), ('7.9', '7.9'), ('7.10', '7.10'), ('7.11', '7.11'), ('7.12', '7.12'), ('7.13', '7.13'), ('7.14', '7.14'), ('7.15', '7.15'), ('7.16', '7.16'), ('7.17', '7.17'), ('7.18', '7.18'), ('7.19', '7.19'), ('8.1', '8.1'), ('8.2', '8.2'), ('8.3', '8.3'), ('8.4', '8.4'), ('8.5', '8.5'), ('8.6', '8.6'), ('8.7', '8.7'), ('8.8', '8.8'), ('8.9', '8.9'), ('8.10', '8.10'), ('8.11', '8.11'), ('8.12', '8.12'), ('8.13', '8.13'), ('8.14', '8.14'), ('8.15', '8.15'), ('8.16', '8.16'), ('8.17', '8.17'), ('8.18', '8.18'), ('8.19', '8.19'), ('9.1', '9.1'), ('9.2', '9.2'), ('9.3', '9.3'), ('9.4', '9.4'), ('9.5', '9.5'), ('9.6', '9.6'), ('9.7', '9.7'), ('9.8', '9.8'), ('9.9', '9.9'), ('9.10', '9.10'), ('9.11', '9.11'), ('9.12', '9.12'), ('9.13', '9.13'), ('9.14', '9.14'), ('9.15', '9.15'), ('9.16', '9.16'), ('9.17', '9.17'), ('9.18', '9.18'), ('9.19', '9.19'), ('10.1', '10.1'), ('10.2', '10.2'), ('10.3', '10.3'), ('10.4', '10.4'), ('10.5', '10.5'), ('10.6', '10.6'), ('10.7', '10.7'), ('10.8', '10.8'), ('10.9', '10.9'), ('10.10', '10.10'), ('10.11', '10.11'), ('10.12', '10.12'), ('10.13', '10.13'), ('10.14', '10.14'), ('10.15', '10.15'), ('10.16', '10.16'), ('10.17', '10.17'), ('10.18', '10.18'), ('10.19', '10.19'), ('11.1', '11.1'), ('11.2', '11.2'), ('11.3', '11.3'), ('11.4', '11.4'), ('11.5', '11.5'), ('11.6', '11.6'), ('11.7', '11.7'), ('11.8', '11.8'), ('11.9', '11.9'), ('11.10', '11.10'), ('11.11', '11.11'), ('11.12', '11.12'), ('11.13', '11.13'), ('11.14', '11.14'), ('11.15', '11.15'), ('11.16', '11.16'), ('11.17', '11.17'), ('11.18', '11.18'), ('11.19', '11.19'), ('12.1', '12.1'), ('12.2', '12.2'), ('12.3', '12.3'), ('12.4', '12.4'), ('12.5', '12.5'), ('12.6', '12.6'), ('12.7', '12.7'), ('12.8', '12.8'), ('12.9', '12.9'), ('12.10', '12.10'), ('12.11', '12.11'), ('12.12', '12.12'), ('12.13', '12.13'), ('12.14', '12.14'), ('12.15', '12.15'), ('12.16', '12.16'), ('12.17', '12.17'), ('12.18', '12.18'), ('12.19', '12.19'), ('13.1', '13.1'), ('13.2', '13.2'), ('13.3', '13.3'), ('13.4', '13.4'), ('13.5', '13.5'), ('13.6', '13.6'), ('13.7', '13.7'), ('13.8', '13.8'), ('13.9', '13.9'), ('13.10', '13.10'), ('13.11', '13.11'), ('13.12', '13.12'), ('13.13', '13.13'), ('13.14', '13.14'), ('13.15', '13.15'), ('13.16', '13.16'), ('13.17', '13.17'), ('13.18', '13.18'), ('13.19', '13.19'), ('14.1', '14.1'), ('14.2', '14.2'), ('14.3', '14.3'), ('14.4', '14.4'), ('14.5', '14.5'), ('14.6', '14.6'), ('14.7', '14.7'), ('14.8', '14.8'), ('14.9', '14.9'), ('14.10', '14.10'), ('14.11', '14.11'), ('14.12', '14.12'), ('14.13', '14.13'), ('14.14', '14.14'), ('14.15', '14.15'), ('14.16', '14.16'), ('14.17', '14.17'), ('14.18', '14.18'), ('14.19', '14.19'), ('15.1', '15.1'), ('15.2', '15.2'), ('15.3', '15.3'), ('15.4', '15.4'), ('15.5', '15.5'), ('15.6', '15.6'), ('15.7', '15.7'), ('15.8', '15.8'), ('15.9', '15.9'), ('15.10', '15.10'), ('15.11', '15.11'), ('15.12', '15.12'), ('15.13', '15.13'), ('15.14', '15.14'), ('15.15', '15.15'), ('15.16', '15.16'), ('15.17', '15.17'), ('15.18', '15.18'), ('15.19', '15.19'), ('16.1', '16.1'), ('16.2', '16.2'), ('16.3', '16.3'), ('16.4', '16.4'), ('16.5', '16.5'), ('16.6', '16.6'), ('16.7', '16.7'), ('16.8', '16.8'), ('16.9', '16.9'), ('16.10', '16.10'), ('16.11', '16.11'), ('16.12', '16.12'), ('16.13', '16.13'), ('16.14', '16.14'), ('16.15', '16.15'), ('16.16', '16.16'), ('16.17', '16.17'), ('16.18', '16.18'), ('16.19', '16.19'), ('17.1', '17.1'), ('17.2', '17.2'), ('17.3', '17.3'), ('17.4', '17.4'), ('17.5', '17.5'), ('17.6', '17.6'), ('17.7', '17.7'), ('17.8', '17.8'), ('17.9', '17.9'), ('17.10', '17.10'), ('17.11', '17.11'), ('17.12', '17.12'), ('17.13', '17.13'), ('17.14', '17.14'), ('17.15', '17.15'), ('17.16', '17.16'), ('17.17', '17.17'), ('17.18', '17.18'), ('17.19', '17.19'), ('18.1', '18.1'), ('18.2', '18.2'), ('18.3', '18.3'), ('18.4', '18.4'), ('18.5', '18.5'), ('18.6', '18.6'), ('18.7', '18.7'), ('18.8', '18.8'), ('18.9', '18.9'), ('18.10', '18.10'), ('18.11', '18.11'), ('18.12', '18.12'), ('18.13', '18.13'), ('18.14', '18.14'), ('18.15', '18.15'), ('18.16', '18.16'), ('18.17', '18.17'), ('18.18', '18.18'), ('18.19', '18.19'), ('19.1', '19.1'), ('19.2', '19.2'), ('19.3', '19.3'), ('19.4', '19.4'), ('19.5', '19.5'), ('19.6', '19.6'), ('19.7', '19.7'), ('19.8', '19.8'), ('19.9', '19.9'), ('19.10', '19.10'), ('19.11', '19.11'), ('19.12', '19.12'), ('19.13', '19.13'), ('19.14', '19.14'), ('19.15', '19.15'), ('19.16', '19.16'), ('19.17', '19.17'), ('19.18', '19.18'), ('19.19', '19.19')], max_length=10)),
                ('picture', models.URLField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('dateInserted', models.DateTimeField(auto_now_add=True, null=True)),
                ('ktest', models.ManyToManyField(blank=True, to='QuestionsAndPapers.KlassTest')),
                ('school', models.ManyToManyField(to='basicinformation.School')),
            ],
        ),
        migrations.CreateModel(
            name='SSCansweredQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SSCKlassTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('max_marks', models.IntegerField()),
                ('published', models.DateField(auto_now_add=True)),
                ('sub', models.CharField(choices=[('General-Intelligence', 'General-Intelligence'), ('General-Knowledge', 'General-Knowledge'), ('Quantitative-Analysis', 'Quantitative-Analysis'), ('English', 'English'), ('Defence-English', 'Defence-English'), ('Defence-Physics', 'Defence-Physics'), ('GroupX-Maths', 'GroupX-Maths'), ('Defence-GK-CA', 'Defence-GK-CA'), ('SSCMultipleSections', 'SSCMultipleSections'), ('Defence-MultipleSubjects', 'Defence-MultipleSubjects'), ('IITJEE10-MultipleSubjects', 'IITJEE10-MultipleSubjects'), ('IITJEE11-MultipleSubjects', 'IITJEE11-MultipleSubjects'), ('IITJEE12-MultipleSubjects', 'IITJEE12-MultipleSubjects'), ('MathsIITJEE10', 'MathsIITJEE10'), ('MathsIITJEE11', 'MathsIITJEE11'), ('MathsIITJEE12', 'MathsIITJEE12'), ('ChemistryIITJEE10', 'ChemistryIITJEE10'), ('ChemistryIITJEE11', 'ChemistryIITJEE11'), ('ChemistryIITJEE12', 'ChemistryIITJEE12'), ('PhysicsIITJEE10', 'PhysicsIITJEE10'), ('PhysicsIITJEE11', 'PhysicsIITJEE11'), ('PhysicsIITJEE12', 'PhysicsIITJEE12'), ('ElectricalLocoPilot', 'ElectricalLocoPilot'), ('FitterLocoPilot', 'FitterLocoPilot'), ('General-Science', 'General-Science'), ('LocoPilot_Diesel', 'LocoPilot_Diesel'), ('CAT_Quantitative_Aptitude', 'CAT_Quantitative_Aptitude'), ('Civil_Loco_Pilot_Tech', 'Civil_Loco_Pilot_Tech'), ('SSC_Electronics1', 'SSC_Electronics1'), ('Basic-Science', 'Basic-Science'), ('Environment-Study', 'Environment-Study'), ('Engineering-Drawing', 'Engineering-Drawing'), ('Physics_NEET', 'Physics_NEET'), ('Chemistry_NEET', 'Chemistry_NEET'), ('Botony_NEET', 'Botony_NEET'), ('Physics_IIT', 'Physics_IIT'), ('Maths_IIT', 'Maths_IIT'), ('Chemistry_IIT', 'Chemistry_IIT')], max_length=70)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('mode', models.CharField(choices=[('BodhiOnline', 'BodhiOnline'), ('BodhiSchool', 'BodhiSchool')], max_length=20)),
                ('totalTime', models.IntegerField(blank=True, null=True)),
                ('course', models.CharField(choices=[('SSC', 'SSC'), ('Railways', 'Railways')], default='SSC', max_length=20)),
                ('pattern_test', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('klas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.klass')),
                ('patternTestBatches', models.ManyToManyField(blank=True, null=True, related_name='patternBatches', to='basicinformation.klass')),
                ('patternTestCreators', models.ManyToManyField(to='basicinformation.Teacher')),
                ('testTakers', models.ManyToManyField(to='basicinformation.Student')),
            ],
        ),
        migrations.CreateModel(
            name='SSCOfflineMarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rightAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('wrongAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('allAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('skippedAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('marks', models.DecimalField(decimal_places=2, max_digits=4)),
                ('testTaken', models.DateField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='SSCOnlineMarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rightAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('wrongAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('allAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('skippedAnswers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('marks', models.DecimalField(decimal_places=2, max_digits=4)),
                ('testTaken', models.DateField()),
                ('testTakenTime', models.DateTimeField(blank=True, null=True)),
                ('timeTaken', models.IntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='SSCquestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_marks', models.IntegerField(default=2)),
                ('negative_marks', models.DecimalField(decimal_places=2, default=0.25, max_digits=2)),
                ('text', models.TextField(blank=True, null=True)),
                ('tier_category', models.CharField(choices=[('1', 'Tier1'), ('2', 'Tier2'), ('3', 'Tier3')], max_length=20)),
                ('section_category', models.CharField(choices=[('General-Intelligence', 'General-Intelligence'), ('General-Knowledge', 'General-Knowledge'), ('Quantitative-Analysis', 'Quantitative-Analysis'), ('English', 'English'), ('Defence-English', 'Defence-English'), ('Defence-Physics', 'Defence-Physics'), ('GroupX-Maths', 'GroupX-Maths'), ('Defence-GK-CA', 'Defence-GK-CA'), ('MathsIITJEE10', 'MathsIITJEE10'), ('MathsIITJEE11', 'MathsIITJEE11'), ('MathsIITJEE12', 'MathsIITJEE12'), ('ChemistryIITJEE10', 'ChemistryIITJEE10'), ('ChemistryIITJEE11', 'ChemistryIITJEE11'), ('ChemistryIITJEE12', 'ChemistryIITJEE12'), ('PhysicsIITJEE10', 'PhysicsIITJEE10'), ('PhysicsIITJEE11', 'PhysicsIITJEE11'), ('PhysicsIITJEE12', 'PhysicsIITJEE12'), ('Design and analysis of algorithm', 'Design and analysis of algorithm'), ('ElectricalLocoPilot', 'ElectricalLocoPilot'), ('FitterLocoPilot', 'FitterLocoPilot'), ('General-Science', 'General-Science'), ('LocoPilot_Diesel', 'LocoPilot_Diesel'), ('CAT_Quantitative_Aptitude', 'CAT_Quantitative_Aptitude'), ('Civil_Loco_Pilot_Tech', 'Civil_Loco_Pilot_Tech'), ('SSC_Electronics1', 'SSC_Electronics1'), ('Basic-Science', 'Basic-Science'), ('Environment-Study', 'Environment-Study'), ('Engineering-Drawing', 'Engineering-Drawing'), ('Physics_NEET', 'Physics_NEET'), ('Chemistry_NEET', 'Chemistry_NEET'), ('Botony_NEET', 'Botony_NEET'), ('Physics_IIT', 'Physics_IIT'), ('Maths_IIT', 'Maths_IIT'), ('Chemistry_IIT', 'Chemistry_IIT')], max_length=70)),
                ('diffculty_category', models.CharField(blank=True, choices=[('easy', 'easy'), ('medium', 'medium'), ('hard', 'hard')], max_length=10, null=True)),
                ('topic_category', models.CharField(choices=[('1.1', '1.1'), ('1.2', '1.2'), ('1.3', '1.3'), ('1.4', '1.4'), ('1.5', '1.5'), ('1.6', '1.6'), ('1.7', '1.7'), ('1.8', '1.8'), ('1.9', '1.9'), ('2.1', '2.1'), ('2.2', '2.2'), ('2.3', '2.3'), ('2.4', '2.4'), ('2.5', '2.5'), ('2.6', '2.6'), ('2.7', '2.7'), ('2.8', '2.8'), ('2.9', '2.9'), ('3.1', '3.1'), ('3.2', '3.2'), ('3.3', '3.3'), ('3.4', '3.4'), ('3.5', '3.5'), ('3.6', '3.6'), ('3.7', '3.7'), ('3.8', '3.8'), ('3.9', '3.9'), ('4.1', '4.1'), ('4.2', '4.2'), ('4.3', '4.3'), ('4.4', '4.4'), ('4.5', '4.5'), ('4.6', '4.6'), ('4.7', '4.7'), ('4.8', '4.8'), ('4.9', '4.9'), ('5.1', '5.1'), ('5.2', '5.2'), ('5.3', '5.3'), ('5.4', '5.4'), ('5.5', '5.5'), ('5.6', '5.6'), ('5.7', '5.7'), ('5.8', '5.8'), ('5.9', '5.9'), ('6.1', '6.1'), ('6.2', '6.2'), ('6.3', '6.3'), ('6.4', '6.4'), ('6.5', '6.5'), ('6.6', '6.6'), ('6.7', '6.7'), ('6.8', '6.8'), ('6.9', '6.9'), ('7.1', '7.1'), ('7.2', '7.2'), ('7.3', '7.3'), ('7.4', '7.4'), ('7.5', '7.5'), ('7.6', '7.6'), ('7.7', '7.7'), ('7.8', '7.8'), ('7.9', '7.9'), ('8.1', '8.1'), ('8.2', '8.2'), ('8.3', '8.3'), ('8.4', '8.4'), ('8.5', '8.5'), ('8.6', '8.6'), ('8.7', '8.7'), ('8.8', '8.8'), ('8.9', '8.9'), ('9.1', '9.1'), ('9.2', '9.2'), ('9.3', '9.3'), ('9.4', '9.4'), ('9.5', '9.5'), ('9.6', '9.6'), ('9.7', '9.7'), ('9.8', '9.8'), ('9.9', '9.9'), ('10.1', '10.1'), ('10.2', '10.2'), ('10.3', '10.3'), ('10.4', '10.4'), ('10.5', '10.5'), ('10.6', '10.6'), ('10.7', '10.7'), ('10.8', '10.8'), ('10.9', '10.9'), ('11.1', '11.1'), ('11.2', '11.2'), ('11.3', '11.3'), ('11.4', '11.4'), ('11.5', '11.5'), ('11.6', '11.6'), ('11.7', '11.7'), ('11.8', '11.8'), ('11.9', '11.9'), ('12.1', '12.1'), ('12.2', '12.2'), ('12.3', '12.3'), ('12.4', '12.4'), ('12.5', '12.5'), ('12.6', '12.6'), ('12.7', '12.7'), ('12.8', '12.8'), ('12.9', '12.9'), ('13.1', '13.1'), ('13.2', '13.2'), ('13.3', '13.3'), ('13.4', '13.4'), ('13.5', '13.5'), ('13.6', '13.6'), ('13.7', '13.7'), ('13.8', '13.8'), ('13.9', '13.9'), ('14.1', '14.1'), ('14.2', '14.2'), ('14.3', '14.3'), ('14.4', '14.4'), ('14.5', '14.5'), ('14.6', '14.6'), ('14.7', '14.7'), ('14.8', '14.8'), ('14.9', '14.9'), ('15.1', '15.1'), ('15.2', '15.2'), ('15.3', '15.3'), ('15.4', '15.4'), ('15.5', '15.5'), ('15.6', '15.6'), ('15.7', '15.7'), ('15.8', '15.8'), ('15.9', '15.9'), ('16.1', '16.1'), ('16.2', '16.2'), ('16.3', '16.3'), ('16.4', '16.4'), ('16.5', '16.5'), ('16.6', '16.6'), ('16.7', '16.7'), ('16.8', '16.8'), ('16.9', '16.9'), ('17.1', '17.1'), ('17.2', '17.2'), ('17.3', '17.3'), ('17.4', '17.4'), ('17.5', '17.5'), ('17.6', '17.6'), ('17.7', '17.7'), ('17.8', '17.8'), ('17.9', '17.9'), ('18.1', '18.1'), ('18.2', '18.2'), ('18.3', '18.3'), ('18.4', '18.4'), ('18.5', '18.5'), ('18.6', '18.6'), ('18.7', '18.7'), ('18.8', '18.8'), ('18.9', '18.9'), ('19.1', '19.1'), ('19.2', '19.2'), ('19.3', '19.3'), ('19.4', '19.4'), ('19.5', '19.5'), ('19.6', '19.6'), ('19.7', '19.7'), ('19.8', '19.8'), ('19.9', '19.9'), ('20.1', '20.1'), ('20.2', '20.2'), ('20.3', '20.3'), ('20.4', '20.4'), ('20.5', '20.5'), ('20.6', '20.6'), ('20.7', '20.7'), ('20.8', '20.8'), ('20.9', '20.9'), ('21.1', '21.1'), ('21.2', '21.2'), ('21.3', '21.3'), ('21.4', '21.4'), ('21.5', '21.5'), ('21.6', '21.6'), ('21.7', '21.7'), ('21.8', '21.8'), ('21.9', '21.9'), ('22.1', '22.1'), ('22.2', '22.2'), ('22.3', '22.3'), ('22.4', '22.4'), ('22.5', '22.5'), ('22.6', '22.6'), ('22.7', '22.7'), ('22.8', '22.8'), ('22.9', '22.9'), ('23.1', '23.1'), ('23.2', '23.2'), ('23.3', '23.3'), ('23.4', '23.4'), ('23.5', '23.5'), ('23.6', '23.6'), ('23.7', '23.7'), ('23.8', '23.8'), ('23.9', '23.9'), ('24.1', '24.1'), ('24.2', '24.2'), ('24.3', '24.3'), ('24.4', '24.4'), ('24.5', '24.5'), ('24.6', '24.6'), ('24.7', '24.7'), ('24.8', '24.8'), ('24.9', '24.9'), ('25.1', '25.1'), ('25.2', '25.2'), ('25.3', '25.3'), ('25.4', '25.4'), ('25.5', '25.5'), ('25.6', '25.6'), ('25.7', '25.7'), ('25.8', '25.8'), ('25.9', '25.9'), ('26.1', '26.1'), ('26.2', '26.2'), ('26.3', '26.3'), ('26.4', '26.4'), ('26.5', '26.5'), ('26.6', '26.6'), ('26.7', '26.7'), ('26.8', '26.8'), ('26.9', '26.9'), ('27.1', '27.1'), ('27.2', '27.2'), ('27.3', '27.3'), ('27.4', '27.4'), ('27.5', '27.5'), ('27.6', '27.6'), ('27.7', '27.7'), ('27.8', '27.8'), ('27.9', '27.9'), ('28.1', '28.1'), ('28.2', '28.2'), ('28.3', '28.3'), ('28.4', '28.4'), ('28.5', '28.5'), ('28.6', '28.6'), ('28.7', '28.7'), ('28.8', '28.8'), ('28.9', '28.9'), ('29.1', '29.1'), ('29.2', '29.2'), ('29.3', '29.3'), ('29.4', '29.4'), ('29.5', '29.5'), ('29.6', '29.6'), ('29.7', '29.7'), ('29.8', '29.8'), ('29.9', '29.9'), ('30.1', '30.1'), ('30.2', '30.2'), ('30.3', '30.3'), ('30.4', '30.4'), ('30.5', '30.5'), ('30.6', '30.6'), ('30.7', '30.7'), ('30.8', '30.8'), ('30.9', '30.9'), ('31.1', '31.1'), ('31.2', '31.2'), ('31.3', '31.3'), ('31.4', '31.4'), ('31.5', '31.5'), ('31.6', '31.6'), ('31.7', '31.7'), ('31.8', '31.8'), ('31.9', '31.9'), ('32.1', '32.1'), ('32.2', '32.2'), ('32.3', '32.3'), ('32.4', '32.4'), ('32.5', '32.5'), ('32.6', '32.6'), ('32.7', '32.7'), ('32.8', '32.8'), ('32.9', '32.9'), ('33.1', '33.1'), ('33.2', '33.2'), ('33.3', '33.3'), ('33.4', '33.4'), ('33.5', '33.5'), ('33.6', '33.6'), ('33.7', '33.7'), ('33.8', '33.8'), ('33.9', '33.9'), ('34.1', '34.1'), ('34.2', '34.2'), ('34.3', '34.3'), ('34.4', '34.4'), ('34.5', '34.5'), ('34.6', '34.6'), ('34.7', '34.7'), ('34.8', '34.8'), ('34.9', '34.9'), ('35.1', '35.1'), ('35.2', '35.2'), ('35.3', '35.3'), ('35.4', '35.4'), ('35.5', '35.5'), ('35.6', '35.6'), ('35.7', '35.7'), ('35.8', '35.8'), ('35.9', '35.9'), ('36.1', '36.1'), ('36.2', '36.2'), ('36.3', '36.3'), ('36.4', '36.4'), ('36.5', '36.5'), ('36.6', '36.6'), ('36.7', '36.7'), ('36.8', '36.8'), ('36.9', '36.9'), ('37.1', '37.1'), ('37.2', '37.2'), ('37.3', '37.3'), ('37.4', '37.4'), ('37.5', '37.5'), ('37.6', '37.6'), ('37.7', '37.7'), ('37.8', '37.8'), ('37.9', '37.9'), ('38.1', '38.1'), ('38.2', '38.2'), ('38.3', '38.3'), ('38.4', '38.4'), ('38.5', '38.5'), ('38.6', '38.6'), ('38.7', '38.7'), ('38.8', '38.8'), ('38.9', '38.9'), ('39.1', '39.1'), ('39.2', '39.2'), ('39.3', '39.3'), ('39.4', '39.4'), ('39.5', '39.5'), ('39.6', '39.6'), ('39.7', '39.7'), ('39.8', '39.8'), ('39.9', '39.9'), ('40.1', '40.1'), ('40.2', '40.2'), ('40.3', '40.3'), ('40.4', '40.4'), ('40.5', '40.5'), ('40.6', '40.6'), ('40.7', '40.7'), ('40.8', '40.8'), ('40.9', '40.9'), ('41.1', '41.1'), ('41.2', '41.2'), ('41.3', '41.3'), ('41.4', '41.4'), ('41.5', '41.5'), ('41.6', '41.6'), ('41.7', '41.7'), ('41.8', '41.8'), ('41.9', '41.9'), ('42.1', '42.1'), ('42.2', '42.2'), ('42.3', '42.3'), ('42.4', '42.4'), ('42.5', '42.5'), ('42.6', '42.6'), ('42.7', '42.7'), ('42.8', '42.8'), ('42.9', '42.9'), ('43.1', '43.1'), ('43.2', '43.2'), ('43.3', '43.3'), ('43.4', '43.4'), ('43.5', '43.5'), ('43.6', '43.6'), ('43.7', '43.7'), ('43.8', '43.8'), ('43.9', '43.9'), ('44.1', '44.1'), ('44.2', '44.2'), ('44.3', '44.3'), ('44.4', '44.4'), ('44.5', '44.5'), ('44.6', '44.6'), ('44.7', '44.7'), ('44.8', '44.8'), ('44.9', '44.9'), ('45.1', '45.1'), ('45.2', '45.2'), ('45.3', '45.3'), ('45.4', '45.4'), ('45.5', '45.5'), ('45.6', '45.6'), ('45.7', '45.7'), ('45.8', '45.8'), ('45.9', '45.9'), ('46.1', '46.1'), ('46.2', '46.2'), ('46.3', '46.3'), ('46.4', '46.4'), ('46.5', '46.5'), ('46.6', '46.6'), ('46.7', '46.7'), ('46.8', '46.8'), ('46.9', '46.9'), ('47.1', '47.1'), ('47.2', '47.2'), ('47.3', '47.3'), ('47.4', '47.4'), ('47.5', '47.5'), ('47.6', '47.6'), ('47.7', '47.7'), ('47.8', '47.8'), ('47.9', '47.9'), ('48.1', '48.1'), ('48.2', '48.2'), ('48.3', '48.3'), ('48.4', '48.4'), ('48.5', '48.5'), ('48.6', '48.6'), ('48.7', '48.7'), ('48.8', '48.8'), ('48.9', '48.9'), ('49.1', '49.1'), ('49.2', '49.2'), ('49.3', '49.3'), ('49.4', '49.4'), ('49.5', '49.5'), ('49.6', '49.6'), ('49.7', '49.7'), ('49.8', '49.8'), ('49.9', '49.9'), ('50.1', '50.1'), ('50.2', '50.2'), ('50.3', '50.3'), ('50.4', '50.4'), ('50.5', '50.5'), ('50.6', '50.6'), ('50.7', '50.7'), ('50.8', '50.8'), ('50.9', '50.9'), ('51.1', '51.1'), ('51.2', '51.2'), ('51.3', '51.3'), ('51.4', '51.4'), ('51.5', '51.5'), ('51.6', '51.6'), ('51.7', '51.7'), ('51.8', '51.8'), ('51.9', '51.9'), ('52.1', '52.1'), ('52.2', '52.2'), ('52.3', '52.3'), ('52.4', '52.4'), ('52.5', '52.5'), ('52.6', '52.6'), ('52.7', '52.7'), ('52.8', '52.8'), ('52.9', '52.9'), ('53.1', '53.1'), ('53.2', '53.2'), ('53.3', '53.3'), ('53.4', '53.4'), ('53.5', '53.5'), ('53.6', '53.6'), ('53.7', '53.7'), ('53.8', '53.8'), ('53.9', '53.9'), ('54.1', '54.1'), ('54.2', '54.2'), ('54.3', '54.3'), ('54.4', '54.4'), ('54.5', '54.5'), ('54.6', '54.6'), ('54.7', '54.7'), ('54.8', '54.8'), ('54.9', '54.9'), ('55.1', '55.1'), ('55.2', '55.2'), ('55.3', '55.3'), ('55.4', '55.4'), ('55.5', '55.5'), ('55.6', '55.6'), ('55.7', '55.7'), ('55.8', '55.8'), ('55.9', '55.9'), ('56.1', '56.1'), ('56.2', '56.2'), ('56.3', '56.3'), ('56.4', '56.4'), ('56.5', '56.5'), ('56.6', '56.6'), ('56.7', '56.7'), ('56.8', '56.8'), ('56.9', '56.9'), ('57.1', '57.1'), ('57.2', '57.2'), ('57.3', '57.3'), ('57.4', '57.4'), ('57.5', '57.5'), ('57.6', '57.6'), ('57.7', '57.7'), ('57.8', '57.8'), ('57.9', '57.9'), ('58.1', '58.1'), ('58.2', '58.2'), ('58.3', '58.3'), ('58.4', '58.4'), ('58.5', '58.5'), ('58.6', '58.6'), ('58.7', '58.7'), ('58.8', '58.8'), ('58.9', '58.9'), ('59.1', '59.1'), ('59.2', '59.2'), ('59.3', '59.3'), ('59.4', '59.4'), ('59.5', '59.5'), ('59.6', '59.6'), ('59.7', '59.7'), ('59.8', '59.8'), ('59.9', '59.9'), ('60.1', '60.1'), ('60.2', '60.2'), ('60.3', '60.3'), ('60.4', '60.4'), ('60.5', '60.5'), ('60.6', '60.6'), ('60.7', '60.7'), ('60.8', '60.8'), ('60.9', '60.9'), ('61.1', '61.1'), ('61.2', '61.2'), ('61.3', '61.3'), ('61.4', '61.4'), ('61.5', '61.5'), ('61.6', '61.6'), ('61.7', '61.7'), ('61.8', '61.8'), ('61.9', '61.9'), ('62.1', '62.1'), ('62.2', '62.2'), ('62.3', '62.3'), ('62.4', '62.4'), ('62.5', '62.5'), ('62.6', '62.6'), ('62.7', '62.7'), ('62.8', '62.8'), ('62.9', '62.9'), ('63.1', '63.1'), ('63.2', '63.2'), ('63.3', '63.3'), ('63.4', '63.4'), ('63.5', '63.5'), ('63.6', '63.6'), ('63.7', '63.7'), ('63.8', '63.8'), ('63.9', '63.9'), ('64.1', '64.1'), ('64.2', '64.2'), ('64.3', '64.3'), ('64.4', '64.4'), ('64.5', '64.5'), ('64.6', '64.6'), ('64.7', '64.7'), ('64.8', '64.8'), ('64.9', '64.9'), ('65.1', '65.1'), ('65.2', '65.2'), ('65.3', '65.3'), ('65.4', '65.4'), ('65.5', '65.5'), ('65.6', '65.6'), ('65.7', '65.7'), ('65.8', '65.8'), ('65.9', '65.9'), ('66.1', '66.1'), ('66.2', '66.2'), ('66.3', '66.3'), ('66.4', '66.4'), ('66.5', '66.5'), ('66.6', '66.6'), ('66.7', '66.7'), ('66.8', '66.8'), ('66.9', '66.9'), ('67.1', '67.1'), ('67.2', '67.2'), ('67.3', '67.3'), ('67.4', '67.4'), ('67.5', '67.5'), ('67.6', '67.6'), ('67.7', '67.7'), ('67.8', '67.8'), ('67.9', '67.9'), ('68.1', '68.1'), ('68.2', '68.2'), ('68.3', '68.3'), ('68.4', '68.4'), ('68.5', '68.5'), ('68.6', '68.6'), ('68.7', '68.7'), ('68.8', '68.8'), ('68.9', '68.9'), ('69.1', '69.1'), ('69.2', '69.2'), ('69.3', '69.3'), ('69.4', '69.4'), ('69.5', '69.5'), ('69.6', '69.6'), ('69.7', '69.7'), ('69.8', '69.8'), ('69.9', '69.9')], max_length=5)),
                ('picture', models.URLField(blank=True, max_length=500, null=True)),
                ('usedFor', models.CharField(blank=True, max_length=30, null=True)),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('dateInserted', models.DateTimeField(auto_now_add=True, null=True)),
                ('language', models.CharField(blank=True, max_length=20, null=True)),
                ('comprehension', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.Comprehension')),
                ('concepts', models.ManyToManyField(to='Recommendations.Concepts')),
                ('ktest', models.ManyToManyField(blank=True, to='QuestionsAndPapers.SSCKlassTest')),
                ('school', models.ManyToManyField(to='basicinformation.School')),
            ],
        ),
        migrations.CreateModel(
            name='SscStudentWeakAreaLoader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(choices=[('General-Intelligence', 'General-Intelligence'), ('General-Knowledge', 'General-Knowledge'), ('Quantitative-Analysis', 'Quantitative-Analysis'), ('English', 'English'), ('SSCMultipleSections', 'SSCMultipleSections')], max_length=70)),
                ('lenonlineSingleSub', models.IntegerField(null=True)),
                ('lenonlineMultipleSub', models.IntegerField(null=True)),
                ('lenofflineSingleSub', models.IntegerField(null=True)),
                ('lenofflineMultipleSub', models.IntegerField(null=True)),
                ('topics', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
                ('weakTopicsPercentage', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
                ('timingTopics', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
                ('weakTiming', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
                ('weakTimingFreq', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
            ],
        ),
        migrations.CreateModel(
            name='SscTeacherTestResultLoader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average', models.FloatField()),
                ('percentAverage', models.FloatField()),
                ('grade_a', models.IntegerField(default=0)),
                ('grade_b', models.IntegerField(default=0)),
                ('grade_c', models.IntegerField(default=0)),
                ('grade_d', models.IntegerField(default=0)),
                ('grade_e', models.IntegerField(default=0)),
                ('grade_f', models.IntegerField(default=0)),
                ('grade_s', models.IntegerField(default=0)),
                ('skipped', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('skippedFreq', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('problemQuestions', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('problemQuestionsFreq', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('freqAnswersQuestions', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('freqAnswersFreq', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('onlineMarks', models.ManyToManyField(to='QuestionsAndPapers.SSCOnlineMarks')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='SSCTemporaryQuestionsHolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quests', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('time', models.DateTimeField()),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAverageTimingDetailCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('chapter', models.CharField(max_length=100)),
                ('totalAttempted', models.IntegerField()),
                ('rightAverage', models.FloatField()),
                ('wrongAverage', models.FloatField()),
                ('rightTotal', models.IntegerField()),
                ('wrongTotal', models.IntegerField()),
                ('rightTotalTime', models.FloatField()),
                ('wrongTotalTime', models.FloatField()),
                ('totalAverage', models.FloatField()),
                ('allMarksIds', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentBookMarkQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField()),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCquestions')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentChapterWiseActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('chapter', models.CharField(max_length=100)),
                ('numAttempted', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
                ('date', models.DateField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentCurrentTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='StudentProgressChapterCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('chapter', models.CharField(max_length=100)),
                ('marks', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('rightPercent', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('wrongPercent', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('rightTime', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('wrongTime', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('skippedPercent', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('dates', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=25), null=True, size=None)),
                ('totalRight', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
                ('totalWrong', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
                ('totalSkipped', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentSmartTestTopics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topics', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('weakness', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=None)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
                ('test', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTestAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('myPercent', models.FloatField()),
                ('klassAverage', models.FloatField()),
                ('klassAveragePercent', models.FloatField()),
                ('myPercentile', models.FloatField()),
                ('allKlassMarks', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('freqAnswerId', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
                ('freqAnswer', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
                ('weakCategories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), null=True, size=None)),
                ('weakAccuracies', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('numRight', models.IntegerField()),
                ('numWrong', models.IntegerField()),
                ('numSkipped', models.IntegerField()),
                ('overallAccuracy', models.FloatField()),
                ('subjectwiseAccuracySub', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), null=True, size=None)),
                ('subjectwiseAccuracy', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(max_length=50), null=True, size=None)),
                ('areaTimeCategory', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), null=True, size=None)),
                ('areaTime', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('hour', models.IntegerField()),
                ('minute', models.IntegerField()),
                ('second', models.IntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='StudentWeakAreasCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('accuracies', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(max_length=50), null=True, size=None)),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(max_length=50), null=True, size=None)),
                ('subject', models.CharField(max_length=100)),
                ('allTests', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
                ('numTests', models.IntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentWeakAreasChapterCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('chapter', models.CharField(max_length=100)),
                ('totalAttempted', models.IntegerField()),
                ('accuracy', models.FloatField()),
                ('totalRight', models.IntegerField()),
                ('totalWrong', models.IntegerField()),
                ('totalSkipped', models.IntegerField()),
                ('skippedPercent', models.FloatField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=100, null=True)),
                ('sortedAccuracies', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=None)),
                ('students', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None)),
                ('minimumTests', models.IntegerField(blank=True, null=True)),
                ('maximumTests', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherBatchWeakAreas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.CharField(max_length=20, null=True)),
                ('subject', models.CharField(max_length=100, null=True)),
                ('weak_sections', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherWeakAreasDetailCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('subject', models.CharField(max_length=100, null=True)),
                ('klass', models.CharField(max_length=100, null=True)),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('accuracies', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
                ('wrong_total', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('total_total', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('subjectTests', models.IntegerField(null=True)),
                ('defenceTests', models.IntegerField(null=True)),
                ('testids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherWeakAreasTimingCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('subject', models.CharField(max_length=100, null=True)),
                ('klass', models.CharField(max_length=100, null=True)),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('averagetiming', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('totalTiming', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None)),
                ('totalFreq', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), null=True, size=None)),
                ('testids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryAnswerHolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quests', models.CharField(max_length=10)),
                ('answers', models.CharField(max_length=10)),
                ('time', models.IntegerField(blank=True, null=True)),
                ('stud', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryOneClickTestHolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quests', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryQuestionsHolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quests', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TestDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_questions', models.IntegerField()),
                ('questions', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='TestRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sortedMarks', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=None)),
                ('students', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None)),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='TestRankTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('totalMarks', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=None)),
                ('scores', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), size=None)),
                ('percentage', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), size=None)),
                ('numCorrect', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=None)),
                ('numIncorrect', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=None)),
                ('numSkipped', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=None)),
                ('rank', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), size=None)),
                ('time', models.DateTimeField(auto_now=True, null=True)),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='TestRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Student')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCKlassTest')),
            ],
        ),
        migrations.CreateModel(
            name='TimesReported',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isReported', models.BooleanField()),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCquestions')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TimesUsed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numUsed', models.IntegerField()),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.klass')),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCquestions')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('timeStart', models.CharField(blank=True, max_length=100, null=True)),
                ('timeEnd', models.CharField(blank=True, max_length=100, null=True)),
                ('sub', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicinformation.klass')),
                ('management', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.SchoolManagement')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basicinformation.Teacher')),
            ],
        ),
        migrations.AddField(
            model_name='sscansweredquestion',
            name='onlineMarks',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCOnlineMarks'),
        ),
        migrations.AddField(
            model_name='sscansweredquestion',
            name='quest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCquestions'),
        ),
        migrations.AddField(
            model_name='institutequestiondifficulty',
            name='quest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCquestions'),
        ),
        migrations.AddField(
            model_name='generaldifficulty',
            name='quest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCquestions'),
        ),
        migrations.AddField(
            model_name='choices',
            name='quest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.Questions'),
        ),
        migrations.AddField(
            model_name='choices',
            name='sscquest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.SSCquestions'),
        ),
        migrations.AddField(
            model_name='answeredquestion',
            name='onlineMarks',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.OnlineMarks'),
        ),
        migrations.AddField(
            model_name='answeredquestion',
            name='quest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QuestionsAndPapers.Questions'),
        ),
    ]
